name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test basic functionality
      run: |
        python -c "
        from shellsh import ShellSh
        import time

        # Test non-blocking mode
        sh = ShellSh('test')
        sh.typeenter('echo Hello World')
        time.sleep(0.5)
        output = sh.flush()
        assert 'Hello World' in output, f'Expected Hello World in output, got: {output}'

        # Test blocking mode
        sh.setblocking(True)
        start = time.time()
        sh.typeenter('sleep 1; echo Done')
        elapsed = time.time() - start
        assert elapsed >= 0.5, f'Blocking mode should wait, elapsed: {elapsed}'
        output = sh.flush()
        assert 'Done' in output, f'Expected Done in output, got: {output}'

        # Test stop
        sh.setblocking(False)
        sh.typeenter('sleep 10')
        time.sleep(0.5)
        sh.stop()
        time.sleep(0.5)

        # Test environment persistence
        sh.typeenter('cd /tmp')
        time.sleep(0.5)
        sh.flush()
        sh.typeenter('pwd')
        time.sleep(0.5)
        output = sh.flush()
        assert '/tmp' in output, f'Expected /tmp in output, got: {output}'

        sh.close()
        print('All tests passed!')
        "

    - name: Test context manager
      run: |
        python -c "
        from shellsh import ShellSh
        import time

        with ShellSh('test_context') as sh:
            sh.typeenter('echo Context Manager Works')
            time.sleep(0.5)
            output = sh.flush()
            assert 'Context Manager Works' in output

        print('Context manager test passed!')
        "

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Check Python syntax
      run: |
        python -m py_compile shellsh/__init__.py
        python -m py_compile shellsh/shellsh.py